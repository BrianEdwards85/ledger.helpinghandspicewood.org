{
    :scalars {
        :Date {
            :parse :date/parse
            :serialize :date/serialize
        }
    }
    :input-objects {
        :EntryCategory {
            :fields {
                :category_id {:type (non-null String)}
                :value {:type (non-null Int)}
            }
        }
    }
    :objects {
        :EntryValue {
            :fields {
                :value {:type (non-null Int)}
                :description {:type (non-null String)}
                :category_id {:type (non-null String)}
            }
        }
        :User {
            :description "User"
            :fields {
                :id {:type (non-null String)}
                :name {:type (non-null String)}
                :email {:type (non-null String)}
                :emails {
                    :type (non-null (list String))
                    :resolve :user/emails}
                :permissions {
                    :type (non-null (list String))
                    :resolve :user/permissions}
                :added_on {:type (non-null :Date)}
            }
        }
        :Client {
            :description "Client"
            :fields {
                :id {:type (non-null String)}
                :name {:type (non-null String)}
                :family {:type (non-null Int)}
                :added_by {
                    :type (non-null :User)
                    :resolve :user/added_by
                }
                :added_on {:type (non-null :Date)}
                :entries {
                    :type (list :Entry)
                    :resolve :entry/for-client
                }
            }
        }
        :Entry {
            :description "Visit Entry"
            :fields {
                :id {:type (non-null String)}
                :group {:type (non-null String)}
                :current {:type (non-null Boolean)}
                :client {
                    :type (non-null :Client)
                    :resolve :client/for-entry
                }
                :entry_total {:type Int}
                :effective_date {:type (non-null :Date)}
                :food {:type (non-null Boolean)}
                :added_by {
                    :type (non-null :User)
                    :resolve :user/added_by
                }
                :added_on {:type (non-null :Date)}
                :notes {:type String}
                :values { :type (list :EntryValue) }
            }
        }
        :Category {
            :description "Entry Category"
            :fields {
                :id {:type (non-null String)}
                :description {:type (non-null String)}
                :added_by {
                    :type (non-null :User)
                    :resolve :user/added_by
                }
                :added_on {:type (non-null :Date)}
                :removed_on {:type :Date}
            }
        }
    }

    :queries {
        :current_user {
            :type :User
            :description "Get current user"
            :resolve :user/current
        }
        :clients {
            :type (list :Client)
            :description "Get all users"
            :resolve :client/all
            :args {
                :ids {:type (list String)}
            }
        }
        :categories {
            :type (list :Category)
            :description "Get list of categories"
            :resolve :category/get
            :args {
                :archived {:type Boolean}
            }
        }
        :group_entries {
            :type (list :Entry)
            :description "Entires for entry group"
            :resolve :entry/group
            :args {
                :group {:type String}
            }
        }
    }
    :mutations {
        :add_client {
            :type String
            :description "Add client"
            :args {
                :name {:type (non-null String)}
                :family {:type (non-null Int)}
            }
            :resolve :client/add
        }
        :upsert_category {
            :type Int
            :description "Upsert category"
            :args {
                :id {:type (non-null String)}
                :description {:type (non-null String)}
            }
            :resolve :category/upsert
        }
        :remove_category {
            :type Int
            :description "Remove category"
            :args {
                :id {:type (non-null String)}
            }
            :resolve :category/remove

        }
        :add_entry {
            :type String
            :description "Add client entry"
            :args {
                :group_id {:type String}
                :effective_date {:type (non-null :Date)}
                :client_id {:type (non-null String)}
                :food {:type (non-null Boolean)}
                :notes {:type String}
                :categories {:type (list :EntryCategory)}
            }
            :resolve :entry/add
        }
    }
}